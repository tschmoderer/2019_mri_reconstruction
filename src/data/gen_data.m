% Generate the undersampled datasets
%
%   - Need a mask.mat file which can be generated by the gen_mask.m script
%   - Need the data_mri.zip file 
%   - Will create the results folder
% 
% Copyright (c) 2019 Timoth√©e Schmoderer

clc
close all
clear

% unzip('data_mri.zip')
% In this folder include your data as <dataset>.mat
% data are supposed to be stored in a variable named "seq" whose dimensions are 
%   Nx x Ny x Nt and data are reals.

load mask.mat

mkdir ../../results

% imwrite(mask_1,  "../../results/mask_1.jpg"); 
imwrite(mask_2,  "../../results/mask_2.jpg"); 
imwrite(mask_4,  "../../results/mask_4.jpg"); 
imwrite(mask_6,  "../../results/mask_6.jpg"); 
imwrite(mask_8,  "../../results/mask_8.jpg"); 
% imwrite(mask_10, "../../results/mask_10.jpg"); 
% imwrite(mask_12, "../../results/mask_12.jpg"); 

% list of datasets
datasets     = {"cine", "eth", "phantom_fb", "phantom_bh"};
acceleration = [2, 4, 6, 8];

for idx = 1:length(datasets)
    fo =  datasets{idx}
    load(strcat(fo, '.mat')); 
    
    fold = strcat('../../results/', fo, '/references/');
    mkdir(fold)
    
    [Nx, Ny, Nt] = size(seq); ref = seq; 
    data = zeros(Nx, Ny, Nt); 
    for t = 1:Nt 
       ref(:,:,t) = real(double(ref(:,:,t)));
       ref(:,:,t) = (ref(:,:,t) - min(min(ref(:,:,t)))) / (max(max(ref(:,:,t))) - min(min(ref(:,:,t))));

       data(:,:,t) = 1/sqrt(Nx*Ny) * fftshift(fft2(ref(:,:,t)));
       
       imwrite(ref(:,:,t), strcat(fold, fo , '_r_frame_', num2str(t), '.jpg'));
    end
    system(strcat("convert -delay 20 -loop 0 ", " ../../results/", fo,"/references/*frame_*.jpg ", ' ../../results/', fo,'/references/', fo,'_r_reference.gif'));

    % save all 
%     u_data_1  = data .* mask_1;
    u_data_2  = data .* mask_2;
    u_data_4  = data .* mask_4;
    u_data_6  = data .* mask_6;
    u_data_8  = data .* mask_8;
%     u_data_10 = data .* mask_10;
%     u_data_12 = data .* mask_12;
    save(strcat(fo, '_all_cardiac.mat'), 'ref', 'u_data_*', 'mask_*');
    
    % rm unused files
    delete(strcat(fo, '.mat'))
    
    clearvars -except fo mask_* datasets acceleration
end

save('general_data.mat', 'datasets', 'acceleration'); 
